function [ binaryImage, c, boundingBoxes, orientations, CC ] = extractCandidateLicensePlates( binaryImage, h, w )
%EXTRACTCANDIDATELICENSEPLATES 
% 
    imageArea = h * w;
    lp_threshold_upper = imageArea * (1/4);
    lp_threshold_lower = imageArea * (1/512);
    aspect_max_deviation = 0.25;
    aspect_deviation_highOrient = 0.7;
    aspectRatio_baseline = 1/3;
    %close all
    %imshow(binaryImage)

    CC = bwconncomp(binaryImage);
    [CC, binaryImage] = stripSmallIslandsCC(CC, binaryImage, lp_threshold_lower, lp_threshold_upper);
    
    CC = bwconncomp(binaryImage);
    orientations = regionprops(CC, 'Orientation');
    
    CC = bwconncomp(binaryImage);
    [CC, binaryImage] = filterIrrelevantOrientations(CC, orientations, binaryImage);
    CC = bwconncomp(binaryImage, 8);
    boundingBoxes = regionprops(CC, 'BoundingBox'); % ~0.006544 s
    [CC, binaryImage] = splitImproperAspectRatios(CC, boundingBoxes, binaryImage, aspect_max_deviation, aspectRatio_baseline);
    
    CC = bwconncomp(binaryImage, 8);
    boundingBoxes = regionprops(CC, 'BoundingBox');
    orientations = regionprops(CC, 'Orientation');
    
    r = regionprops(CC, 'Centroid');
    c = cat(1, r.Centroid);
    %figure, imshow(binaryImage), title('af')
    %hold on, plot(c(:, 1), c(:, 2), 'b*'), hold off;
end

function [ CC, binaryImage ] = stripSmallIslandsCC(CC, binaryImage, lp_threshold_lower, lp_threshold_upper)
    numPixels = cellfun(@numel,CC.PixelIdxList);
    for i = 1:length(numPixels)
        if (numPixels(i) < lp_threshold_lower || numPixels(i) > lp_threshold_upper)
            binaryImage(CC.PixelIdxList{i}) = 0;
        end
    end
end

function [ CC, binaryImage ] = filterIrrelevantOrientations(CC, orientations, binaryImage)
    for i = 1:length(orientations)
        if (orientations(i).Orientation < -45 || orientations(i).Orientation > 45)
            binaryImage(CC.PixelIdxList{i}) = 0;
        end
    end
end

function [ CC, binaryImage ] = splitImproperAspectRatios(CC, boundingBoxes, binaryImage, aspect_max_deviation, aspectRatio_baseline)
    % Aspect ratio h/w 
    for i = 1:length(boundingBoxes)
        bbox = boundingBoxes(i).BoundingBox;
        isOk = checkAspectRatioOfBbox(bbox, binaryImage, aspect_max_deviation, aspectRatio_baseline);
        if(isOk == 0)
            if(~aspectRatioOkIfRotationIsCorrected(bbox, orientations(i)))
                binaryImage(CC.PixelIdxList{i}) = 0;
            end
        end
    end
end

function [ isOk ] = checkAspectRatioOfBbox(bbox, binaryImage, aspect_max_deviation, aspectRatio_baseline)
        aspectRatio = bbox(4) / bbox(3);
        if(aspectRatio < aspectRatio_baseline - aspect_max_deviation || aspectRatio > aspectRatio_baseline + aspect_max_deviation)
            isOk = 0;
        else
            isOk = 1;
        end
end

function [ ans ] = aspectRatioOkIfRotationIsCorrected(bbox, binaryImage, orientation)
    safeMargin = 2;
    id_x_lower = max(0, box(1) - safeMargin);
    id_x_upper = min(handles.videoWidth, id_x_lower + box(3) + safeMargin);
    id_y_lower = max(0, box(2) - safeMargin);
    id_y_upper = min(handles.videoHeight, id_y_lower + box(4) + safeMargin);
    im = imrotate(binaryImage(id_y_lower:id_y_upper, id_x_lower:id_x_upper), orientation);
    boundingBoxes = regionprops(im, 'BoundingBox');
    
    if(length(boundingBoxes) ~= 1)
        ans = 0;
        return
    else
        if(checkAspectRatioOfBbox(boundingBoxes(1).BoundingBox, binaryImage,))
    end
end
